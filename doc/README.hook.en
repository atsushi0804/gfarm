README for syscall-hooking library

Gfarm syscall-hooking library enables every existing (binary) program
to access Gfarm file system without any modification as if it is
mounted at /gfarm.

Basically the syscall-hooking library traps every system call for file
access.  When a file is under the mount point /gfarm or a Gfarm URL
starting with 'gfarm:' or 'gfarm@', appropriate Gfarm I/O APIs are
called.

*** glibc

When you are using glibc typically in Linux, it is necessary to
replace it to enable necessary system calls to hook properly.  The
change is just for a version script for ld to add necessary symbols
(__lseek64, __getdents, and __getdents64) to the dynamic symbol table.

Binary packages of glibc is available from Gfarm web site
(http://datafarm.apgrid.org/software/) for typical distribution of
Linux.  If you need a glibc package other than provided, contact
datafarm@apgrid.org.

If you cannot replace glibc, follow the section of 'Running existing
programs by statically linking with syscall-hooking library'.

*** Running existing programs without any modification

Every dynamically linked executable can access Gfarm file system by
just specifying LD_PRELOAD environment variable in Linux and possibly
in Solaris.

In the case of sh or bash,

	$ LD_PRELOAD=/usr/lib/libgfs_hook.so.0
	$ export LD_PRELOAD

In the case of csh or tcsh,

	% setenv LD_PRELOAD /usr/lib/libgfs_hook.so.0

You can specify the above in the shell rc file such as .bashrc and
.cshrc.  However, tcsh is not tested well at this time.  We recommend
to use bash.

After specifying the environment variable, every program can access to
Gfarm file system.  If you would like to access Gfarm file system in
your login interactive shell, just execute bash again.

	% exec bash -l

Now, you can change the current working directory to /gfarm.

	% cd /gfarm

When you encounter a problem such that a newly created file cannot be
accessed by other applications, you need to decrease the timeout of
Gfarm metadata cache at the client side by the environment variable
GFARM_DIRCACHE_TIMEOUT.  When you would like to set 10 seconds,

	% export GFARM_DIRCACHE_TIMEOUT=10

Default is 60 seconds.

When you would like to use on-demand replication feature, it is
possible to be specified by GFARM_FLAGS.

	% export GFARM_FLAGS=r

In this case, every file will be replicated to the local file system
on demand instead of accessing remotely.  This flag is also required
for a program whose child process reads or writes a file opened by the
parent process such as 'tar zxfp'.

For MPI applications, it is necessary to generate libgfs_hook.so for
MPI library in your environment, or follow a section of either
'Running existing programs by linking with syscall-hooking library' or
'Running existing programs by statically linking with syscall-hooking
library'.

*** Running existing programs by linking with syscall-hooking library

When your operating system does not support LD_PRELOAD, it is
necessary to link with Gfarm syscall-hooking library to access Gfarm
file system.

* C program

	% cc prog.c /usr/lib/gfs_hook.o -lgfarm -lldap

or

	% cc prog.c -I/usr/grid/include/gcc32 \
		/usr/lib/gfs_hook.o -lgfarm \
		-L/usr/grid/lib \
		`globus-makefile-header -flavor=gcc32 globus_gssapi_gsi | perl -n -e 'if (/GLOBUS_PKG_LIBS = (.*)/){print $1;}'` \
		-lldap

* Fortran or C++ program

Follows the section for 'C program' but with an appropriate compiler.

* MPI program

In the case of MPI programs, link with gfs_hook_no_init.o and
hooks_init_mpi.c instead of gfs_hook.o.

	% mpicc prog.c /usr/lib/gfs_hook_no_init.o /usr/lib/hooks_init_mpi.c \
		-lgfarm -lldap

*** Running existing programs by statically linking with
    syscall-hooking library

If you cannot replace glibc, or if a program is a statically linked
executable, it is necessary to link statically with the Gfarm
syscall-hook library and Gfarm I/O library.

* C program

Libraries that need to be linked with depend on the operating system.

	% cc -static prog.c /usr/lib/gfs_hook.o -lgfarm -lldap -llber \
		-lssl -lcrypto -lsasl -ldl

or

	% cc -static prog.c /usr/lib/gfs_hook.o -lgfarm -lldap -llber \
		-lssl -lcrypto -lsasl2 -lkrb5 -lk5crypto -lcom_err -ldl

Note that openldap libraries in a rpm package cannot be linked
statically in RedHat-9 and Fedora Core 1.  It results in segmentation
fault.  In this case, you need to install openldap and required
libraries such as Berkeley DB by yourself.

Note that static linking results in segmentation fault when using LDAP
authentication in RedHat-8.0 and RedHat-7.3.

In the case with the Globus GSI library of the flavor gcc32,

	% gcc -static prog.c -I/usr/grid/include/gcc32 -L/usr/grid/lib \
		/usr/lib/gfs_hook.o -lgfarm \
		`globus-makefile-header -static -flavor=gcc32 globus_gssapi_gsi | perl -n -e 'if (/GLOBUS_PKG_LIBS = (.*)/){print $1;}'` \
		-lldap -llber -lsasl -ldl

* Fortran or C++ program

Follows the section for 'C program' but with an appropriate compiler.

* MPI program

In the case of MPI programs, link with gfs_hook_no_init.o and
hooks_init_mpi.c instead of gfs_hook.o.

	% mpicc -static prog.c /usr/lib/gfs_hook_mpi.o \
		/usr/lib/hooks_init_mpi.c -lgfarm -lldap -llber \
		-lssl -lcrypto -lsasl -ldl

----------------------------------------------------------------------

** File view semantics

For newly created files, the default file view is a local file view.
For existent files, if the number of processes and the number of file
fragments are the same, the default file view is a local file view,
otherwise, the default view is a global view.

** Extended Gfarm URL

Some applications like ROOT I/O cut off the filename before ':'
without any investigation.  We provide a variety of Gfarm URL;
'gfarm@'.  For example, 'gfarm:~/foo.txt' is also referred to by
'gfarm@~/foo.txt'.

Moreover, we provide a (quasi) mount point for a Gfarm file system;
'/gfarm'.  A home directory in Gfarm file system and the current
working directory can be specified by '/gfarm/~' and '/gfarm/.',
respectively.

We also provide a way to explicitly specify a fragment index (or
section name) of a Gfarm file by extending Gfarm URL.
'gfarm::0:foo.txt', 'gfarm@:0:foo.txt', or '/gfarm:0:/./foo.txt'
specifies the first fragment of 'gfarm:foo.txt'.

** gfs_hook APIs

Gfs_hook APIs are provided for further manipulation of file views
beyond the default semantics.

* default file view

The following APIs change the default file view of the succeeding file
opening or creating operations.

void gfs_hook_set_default_view_local(void);
void gfs_hook_set_default_view_index(int index, int nfrags);
void gfs_hook_set_default_view_section(char *section);
void gfs_hook_set_default_view_global(void);

* changing file view

The following APIs change the file view of a file specified by a file
descriptor 'fd'.  The semantics is same as gfs_pio_set_view_local (3),
gfs_pio_set_view_index (3), gfs_pio_set_view_section (3), and
gfs_pio_set_view_global (3), respectively, except the first argument.

char *
gfs_hook_set_view_local(int fd, int flags);

char *
gfs_hook_set_view_index(int fd, int nfrags, int index, char *host, int flags);

char *
gfs_hook_set_view_section(int fd, char *section, char *host, int flags);

char *
gfs_hook_set_view_global(int fd, int flags);

$Id$
