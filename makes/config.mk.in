prefix = @prefix@
exec_prefix = @exec_prefix@

# save default for reference from where installation directory is overridden.
default_sbindir = @sbindir@
default_bindir = @bindir@
default_libdir = @libdir@
default_libexecdir = @libexecdir@
default_includedir = @includedir@
default_exec_includedir = @includedir@
default_mandir = @mandir@
default_docdir = $(prefix)/share/doc/gfarm
default_htmldir = $(default_docdir)/html

sbindir = $(default_sbindir)
bindir = $(default_bindir)
libdir = $(default_libdir)
libexecdir = $(default_libexecdir)
includedir = $(default_includedir)
exec_includedir = $(default_exec_includedir)
mandir = $(default_mandir)
docdir = $(default_docdir)
htmldir = $(default_htmldir)

CC = @CC@
OPTFLAGS = @CFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
YACC = @YACC@
RANLIB = @RANLIB@
LIBTOOL = @LIBTOOL@
# the use of the following operations should honor $(DESTDIR)
MKDIR_P = @MKDIR_P@
# We don't use "@INSTALL@" here, since we want absolute pathname 
# instead of relative pathname for the case that install-sh is selected.
# XXX this isn't efficient on platforms which have working /usr/bin/install.
INSTALL = $(top_srcdir)/makes/install-sh -c
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_DATA = @INSTALL_DATA@

LIBS = @LIBS@

largefile_cflags = @largefile_cflags@
largefile_ldflags = @largefile_ldflags@
# `getconf LFS_LIBS` is already added to $(LIBS)

# for conditional compilation which depends on _LARGEFILE64_SOURCE API
largefile64_srcs = @largefile64_srcs@
largefile64_objs = @largefile64_objs@
largefile64_cflags = @largefile64_cflags@
largefile64_targets = @largefile64_targets@

pthread_includes = @pthread_includes@
pthread_libs = @pthread_libs@
# for conditional compilation which depends on whether pthread is enabled or not
pthread_srcs = @pthread_srcs@
pthread_objs = @pthread_objs@
pthread_cflags = @pthread_cflags@
pthread_targets = @pthread_targets@

ldap_includes = @ldap_includes@
ldap_libs = @ldap_libs@

openssl_includes = @openssl_includes@
openssl_libs = @openssl_libs@

globus_flavor = @globus_flavor@
globus_location = @globus_location@
globus_includes = @globus_includes@
globus_gssapi_libs = @globus_gssapi_libs@
# for conditional compilation which depends on whether globus is enabled or not
globus_srcs = @globus_srcs@
globus_objs = @globus_objs@
globus_cflags = @globus_cflags@
globus_targets = @globus_targets@

MPICC = @mpicc@
# for conditional compilation which depends on whether MPI is enabled or not
mpi_srcs = @mpi_srcs@
mpi_objs = @mpi_objs@
mpi_cflags = @mpi_cflags@
mpi_targets = @mpi_targets@

readline_includes = @readline_includes@
readline_libs = @readline_libs@

# build lib/gfs_hook/sysdep/$(gfs_hook_sysdep_subdir)
gfs_hook_sysdep_subdir = @gfs_hook_sysdep_subdir@
