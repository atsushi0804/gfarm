● 実行環境

gfarm システムの実行環境は、下記の種類のホストからなります。

・クライアント

  ユーザーが gfarm システムにリクエストを送るのに用いるホストです。

・計算プール

  計算機資源と、gfarm 並列ファイルのデータ・ディスクを提供するホスト群です。

・サーバー

  ユーザーが並列コマンドを起動するのに用いるホストです。
  サーバーで起動された並列コマンドは、計算プール上のホスト群で、実際に
  プログラムとして実行されることになります。

  典型的には、クライアントで実行した Ninf クライアントによって、サーバー
  上で並列コマンドが起動されることになるでしょう。

・メタDBサーバー

  gfarm 並列ファイル・システムのメタデータを記憶するホストです。
  サーバーのうちの数台が適当でしょう。

gfarm 並列ファイルシステムは、巨大なファイルを、計算プール上の複数のホ
ストに分散して配置します。この分散されたファイルの個々の断片をフラグメ
ントと呼びます。計算プール上のホストそれぞれが、自ホスト上に存在するフ
ラグメントを処理するような、データ並列処理アプリケーションを支援するこ
とが、gfarm システムの主な目的の一つです。

例えば、サーバー上で「gfmpirun gfwc gfarm:~/file」を実行すると、引数で
指定した gfarm並列ファイル ``gfarm:~/file'' のフラグメントが存在する計
算プール上で、コマンド gfwc が mpirun によって並列実行されます。

あるいは、サーバー上で
「gfrsh gfgrep -o gfarm:~/output 正規表現 gfarm:~/input」を実行すると、
引数で指定した 入力 gfarm 並列ファイルのフラグメントが存在する
計算プール上で、コマンド gfgrep が rsh によって並列実行されます。

========================================================================

● ソフトウェア構成

作成したソフトウェアは、大きく下記の項目に分類されます。

・libgfarm.a ライブラリ

  gfarm のもとで走るアプリケーション・プログラムにリンクされる
  ライブラリです。gfarm の並列ファイルシステムのライブラリ・インターフェー
  スや、ユーティリティ関数からなります。

  並列ファイルシステムは、内部的には LDAP サーバーを利用した、gfarm メ
  タデータベース・ライブラリを用いて実装されています。

・gfmd - gfarm メタDBサーバー

  メタDBサーバー・マシン上で動作するデーモンプログラムです。
  現状の実装では、実行中のプロセス情報のみを管理しており、
  本来のメタDBの機能は果たしていません。

・gfsd - gfarm 並列ファイルシステム・デーモン

  計算プール上の全ホストで動作するデーモンプログラムです。
  gfarm 並列ファイルのデータ・ディスク・アクセス機能を提供し、
  gfarm ライブラリと協調して、gfarm 並列ファイルシステムを構成します。

・gfarm 管理ツール

  データ管理ツール digest, gfexport、認証キー管理ツール gfkey、
  並列タスク実行ツール gfmpirun, gfrsh からなります。
  
・gfarm サンプル・プログラム

  gfarm 並列ファイルシステムにファイルを取り込むコマンドのコーディング
  例として、gfimport_fixed および gfimport_text を用意しました。

  gfarm アプリケーションのサンプルプログラムとして、MPI プログラム 
  gfwc および、rsh で起動される並列プログラム gfgrep を用意しました。

  これらのサンプルプログラムは、gfarm/gftool/example の下にあります。

========================================================================

● 構築方法

今回のシステムは、Linux 上で実行テストされています。
構築に関しては NetBSD, Solaris, Tru64 UNIX 上でテストされています。
また、IRIX でも、gfsd を除くコマンドはテストされていますので、サーバー・
ホストに関しては IRIX を用いることもできます。

今回のシステムを構築するには、下記のようにします。

	% ./configure [オプション]
	% make
	% make install

configure コマンドには、下記のオプションがあります。
このうち、--with-openldap および --with-openssl は、必須です。

・--with-openldap=ディレクトリ

  OpenLDAP のインストールされているディレクトリを指定します。
  このオプションは必ず指定してください。

  今回のシステムは、Globus に付属している OpenLDAP-1.2.7-globus でテス
  トされています。OpenLDAP-1.x 系であれば、動作する可能性が高いと思わ
  れます。

・--with-openssl=ディレクトリ

  OpenSSL のインストールされているディレクトリを指定します。
  このオプションは必ず指定してください。

・--prefix=ディレクトリ

  インストール先のディレクトリを指定します。このオプションを省略した場
  合は $HOME ディレクトリの下にインストールします。

利用するコンパイラを明示したい場合には、環境変数 CC に、コンパイラのコ
マンド名を指定して configure を実行してください。

========================================================================

● 設定方法

この章では、管理者が最初にどんな設定を行う必要があるかを解説します。

以下では、下記のような構成を仮定して解説します。

・gfarm インストール・ディレクトリ

	/usr/local/gfarm

・OpenLDAP インストール・ディレクトリ

	/usr/local/openldap

・LDAP サーバーを実行するホスト

	ldap.hpcc.gr.jp

・LDAP サーバーの利用する TCP ポート番号

	9000

・LDAP サーバーの設定ファイルを置くディレクトリ

	/etc/gfarm-ldap

・LDAP データベースの初期設定内容を記述するファイル

	/etc/gfarm-ldap/initial.ldif

・LDAP のデータベース・ファイルを置くディレクトリ

	/var/gfarm-ldap

・LDAP の base distinguish name

	dc=hpcc,dc=gr,gc=jp

  この値は、LDAP で保持する情報の根となるノードの名称です。

  gfarm システムを利用している組織のドメイン名が hpcc.gr.jp であれば、
  そのドメイン名の各構成要素を dc= に指定して「dc=hpcc,dc=gr,gc=jp」の
  ような名前を決め、これを base distinguish name に使うと良いでしょう。


・計算プールに置く、データ・ファイル用スプール・ディレクトリ

	/var/spool/gfarm

------------------------------------------------------------------------

◇ LDAP サーバー

まず、gfarm 並列ファイルシステムのメタ情報を保持する LDAP サーバーを
用意する必要があります。これには下記の設定が必要です。

▽ slapd-master.conf

OpenLDAP 付属の LDAP サーバーの設定ファイルです。
base distinguish name を、このファイルの suffix および 
rootdn で参照しているのに注意してください。

例えばホスト ldap.hpcc.gr.jp の
ファイル /etc/gfarm-ldap/slapd-master.conf に、
下記のような内容を記述します。

------------------------------ ここから ------------------------------
#
# master slapd config -- for testing
#
include         /etc/gfarm-ldap/slapd.at.conf
include         /etc/gfarm-ldap/slapd.oc.conf
#schemacheck    on
pidfile         /var/gfarm-ldap/slapd.pid
argsfile        /var/gfarm-ldap/slapd.args

#######################################################################
# ldbm database definitions
#######################################################################

database        ldbm
suffix          "dc=hpcc, dc=gr, dc=jp"
directory       /var/gfarm-ldap
rootdn          "cn=root, dc=hpcc, dc=gr, dc=jp"
rootpw          secret-ldap-password
defaultaccess   write
#
index           hostname
index           default none
#
dbcacheNoWsync
------------------------------ ここまで ------------------------------

▽ slapd.at.conf

slapd-master.conf から include されているファイルです。

OpenLDAP にサンプルとして付属する slapd.at.conf に、
下記の内容を追加したものを、
ホスト ldap.hpcc.gr.jp の
ファイル /etc/gfarm-ldap/slapd.ac.conf に
置いてください。
特にカスタマイズする項目はありません。

------------------------------ ここから ------------------------------
#
# GFarm
#
attribute       hostname                                cis
attribute       gfarmFile                               ces
attribute       serialNumber                            ces
attribute       program                                 ces
attribute       architecture                            ces
attribute       fileSize                                ces
attribute       checksumType                            ces
attribute       checksum                                ces
attribute       createTime                              ces
attribute       generatorProgram                        ces
attribute       generatorInputGFarmFiles                ces
attribute       generatorParameter                      ces
------------------------------ ここまで ------------------------------

▽ slapd.oc.conf

slapd-master.conf から include されているファイルです。

OpenLDAP にサンプルとして付属する slapd.oc.conf に、
下記の内容を追加したものを、
ホスト ldap.hpcc.gr.jp の
ファイル /etc/gfarm-ldap/slapd.oc.conf に
置いてください。
特にカスタマイズする項目はありません。

------------------------------ ここから ------------------------------
#
# GFarm
#

objectclass GFarmFile
        requires
                objectClass
        allows
                gfarmFile,
                generatorProgram,
                generatorInputGFarmFiles,
                generatorParameter

objectclass GFarmFileFragment
        requires
                objectClass
        allows
                gfarmFile,
                serialNumber,
                fileSize,
                checksumType,
                checksum

objectclass GFarmFileFragmentCopy
        requires
                objectClass
        allows
                gfarmFile,
                serialNumber,
                hostname

objectclass GFarmHost
        requires
                objectClass
        allows
                hostname,
                architecture

objectclass GFarmProgram
        requires
                objectClass
        allows
                program

objectclass GFarmProgramBinary
        requires
                objectClass
        allows
                program,
                architecture,
                createTime,
                checksumType,
                checksum

objectclass GFarmProgramCopy
        requires
                objectClass
        allows
                program,
                hostname
------------------------------ ここまで ------------------------------

▽ メタDB の初期情報を作る

次に、LDAP メタ DB に登録する情報の初期設定を、
アスキーファイルで作成します。

このファイルには、LDAP の根となるノードの情報と、計算プールを
構成するホスト群の情報を記述します。

・LDAP の根となるノードの情報

  dn (distinguish name) 属性に、base distinguish name を
  設定します。

・計算プールのホスト情報

  ホスト毎に、下記の属性を設定します。

  -- dn

    下記のような値を設定します。

	hostname=そのホストのホスト名(FQDN), dc=hpcc,dc=gr,gc=jp

  -- objectclass

    下記の値を設定します。

	GFarmHost

  -- hostname

    dn 属性の hostname に設定したのと同じ値を設定します。

  ・architecture

    計算機アーキテクチャを表す名称を sparc-sun-solaris のような
    形式で記述します。


例えばホスト ldap.hpcc.gr.jp の
ファイル /etc/gfarm-ldap/initial.ldif に、
下記のような内容を設定することになります。

------------------------------ ここから ------------------------------
dn: dc=hpcc, dc=gr, dc=jp
objectclass: top
objectclass: organization
objectclass: domainRelatedObject
objectclass: quipuObject
objectclass: quipuNonLeafObject

dn: hostname=hpc420-1.hpcc.gr.jp, dc=hpcc,dc=gr,dc=jp
objectclass: GFarmHost
hostname: hpc420-1.hpcc.gr.jp
architecture: sparc-sun-solaris

dn: hostname=hpc420-2.hpcc.gr.jp, dc=hpcc,dc=gr,dc=jp
objectclass: GFarmHost
hostname: hpc420-2.hpcc.gr.jp
architecture: sparc-sun-solaris

dn: hostname=wiz.etl.go.jp, dc=hpcc,dc=gr,dc=jp
objectclass: GFarmHost
hostname: wiz.etl.go.jp
architecture: alpha-dec-osf

dn: hostname=o2k.etl.go.jp, dc=hpcc,dc=gr,dc=jp
objectclass: GFarmHost
hostname: o2k.etl.go.jp
architecture: mips-sgi-irix
------------------------------ ここまで ------------------------------

▽ LDAP データベースの作成

前節で作成したメタDBの初期情報を元に、LDAP データベースを作成します。
これには、ホスト ldap.hpcc.gr.jp で、下記のコマンドを実行します。

     % rm -f /var/gfarm-ldap/*
     % cd /etc/gfarm-ldap
     % /usr/local/openldap/sbin/ldif2ldbm -f slapd-master.conf -i initial.ldif

▽ LDAP サーバーの起動

ホスト ldap.hpcc.gr.jp で、LDAP サーバーを起動します。
下記のコマンドを実行します。

	% cd /usr/local/openldap/libexec
	% ./slapd -f /etc/gfarm-ldap/slapd-master.conf -p 9000

このオプション -p で指定した 9000 が、LDAP サーバーのポート番号です。

▽ LDAP サーバーの動作試験

下記のコマンドを実行してみましょう。initial.ldif ファイルに設定したの
と同じ内容が表示されれば、正しく動作しています。

	% set host=ldap.hpcc.gr.jp
	% set port=9000
	% set basedn='dc=hpcc, dc=gr, dc=jp'
	% cd /usr/local/openldap/bin
	% ./ldapsearch -b "$basedn" -L -h $host -p $port '(objectclass=*)'

------------------------------------------------------------------------

◇ gfsd スプール・ディレクトリの作成

計算プール上の全ホストで、スプール・ディレクトリ /var/spool/gfarm 
を作成します。
また、スプール・ディレクトリの下に、各ユーザー別にディレクトリを
作成することにします。

	% su
	Password: 
	# sh
	# mkdir /var/spool/gfarm
	# chmod 1777 /var/spool/gfarm
	# for u in morita tatebe soda; do
	>   mkdir /var/spool/gfarm/$u
	>   chown ${u} /var/spool/gfarm/$u
	> done
	# exit
	# exit
	% 

------------------------------------------------------------------------

◇ /etc/gfarm.conf

サーバー・ホストと、計算プール上の全ホストで、/etc/gfarm.conf を
下記のように設定します。

------------------------------ ここから ------------------------------
spool /var/spool/gfarm
ldap_serverhost ldap.hpcc.gr.jp
ldap_serverport 9000
ldap_base_dn "dc=hpcc, dc=gr, dc=jp"
------------------------------ ここまで ------------------------------

サーバー・ホスト上では、~/.gfarmrc に設定することもできます。
計算プールのホスト上では、/etc/gfarm.conf に設定しないと
いけません。

------------------------------------------------------------------------

◇ gfmd

メタDBサーバー用マシン上で、、root 権限で gfmd を立ち上げます。
root 権限が必要なのは、利用する port 番号のデフォールト値のみが
理由なので、1024 番以上のポート番号を、/etc/gfarm.conf の metdb_serverport 
で指定すれば、一般ユーザー権限で実行することも可能です。
gfmd は、前節で解説した /etc/gfarm.conf ファイルを設定ファイルとして
読み込みます。

◇ gfsd

計算プールを構成する全ホストにおいて、root 権限で gfsd を立ち上げま
す。gfsd は、前節で解説した /etc/gfarm.conf ファイルを設定ファイルとして
読み込みます。

========================================================================

● 実行方法

この章では、各ユーザーによる、サンプルの実行例を説明します。

◇ 認証用セッションキー作成

サーバーと計算プールのホストが、全てホーム・ディレクトリを共有している
場合には、この節は無視して構いません。

さもなくば、gfarm のアプリケーションを実行しようとする各ユーザーは、下
記を実行しておく必要があります。

1. あらかじめサーバー上で下記のコマンドを実行して、
  「~/.gfarm_shared_key」に認証用セッション・キー・ファイルを
  作成する。

	% gfkey -c

2. 「~/.gfarm_shared_key」を、計算プールの全ホストのホームディ
  レクトリにコピーする。

◇ サンプル・プログラムの実行

以下に、サンプル・プログラムの実行例を示します。

・テキストファイルのインポート

	% gfimport_text -H ホスト定義ファイル -o gfarm:~/テスト.txt テキスト・ファイル

  上記「-H」オプションで指定する「ホスト定義ファイル」は、import した
  ファイルのフラグメントを置く計算プールのホスト名を記述したファイル名です。
  一行に一ホストの形式で指定してください。指定したホストに、入力テキス
  ト・ファイルを等分割して import します。

  「-H ホスト定義ファイル」の代わりに「-f フラグメント定義ファイル」を
  指定することもできます。この場合、各行を下記の形式で記述します。
	そのフラグメントのバイト数  ホスト名

  結果を確認してみましょう。

	% gfexport gfarm:~/テスト.txt | diff -c - テキスト・ファイル

・固定長レコードファイルのインポート

	% gfimport_text -H ホスト定義ファイル -o gfarm:~/テスト.bin -l 100 固定長レコード・ファイル

  結果を確認してみましょう。

	% gfexport gfarm:~/テスト.bin | cmp - 固定長レコード・ファイル

・gfgrep

	% gfgrep -o gfarm:~/gfgrep.out 正規表現 gfarm:~/テスト.txt

  結果を確認してみましょう。

	% gfexport gfarm:~/gfgrep.out
	% grep 正規表現 テキスト・ファイル

・gfwc

	% gfwc gfarm:~/テスト.txt

  結果を確認してみましょう。

	% wc テキスト・ファイル

