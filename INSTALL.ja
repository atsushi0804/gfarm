グリッドデータファームシステムソフトウェア Gfarm

● Gfarm システムの概要

Gfarm システムは大規模データ処理サービス，データインテンシブコンピュー
ティング環境をグリッド上で実現するためのシステムソフトウェアです．デー
タ参照局所性のある大規模データ処理では，データのネットワーク移動を抑え
ることにより，高速入出力，高速並列処理を実現します．Gfarm システムは，
以下で構成されます．

  1) 広域並列ファイルシステム (Gfarm ファイルシステム)
  2) 並列入出力 API           (Gfarm 並列入出力 API)
  3) プロセスマネージャ       (Gfarm プロセスマネージャ)

Gfarm ファイルシステムは，広域に複数存在する PC クラスタノードのローカ
ルディスクを利用して構成される並列ファイルシステムです．それぞれのノー
ドでは gfsd と呼ばれる I/O デーモンが走り，ローカルディスクへのアクセ
スを安全かつ効率的に可能とします．ファイルは，物理的には任意サイズのファ
イル断片に分割され，それぞれのローカルディスクに分散配置されます．また，
それらファイル断片は複製を持つこともでき，耐故障性および負荷バランスを
向上させることができます．それらファイルシステムメタデータは，Gfarm メ
タデータサーバにより管理されます．

Gfarm 並列入出力 API は，Gfarm ファイルシステムを単一システムイメージ
で効率的に利用するための並列入出力 API です．Gfarm ファイルシステムで
は，ファイルは任意サイズのファイル断片に分割して格納されますが，そのファ
イル断片を簡単にアプリケーションが扱うための API などが拡張されてます．
この API は従来の入出力 API からも利用することができ，従来のアプリケー
ションも簡単に Gfarm ファイルシステムを利用することができます．

Gfarm プロセスマネージャは，ファイル断片の分散を基にしたファイルアフィ
ニティスケジューラ，プロセス管理，数千，数万プロセスの高速プロセス起動
で構成されます．

========================================================================

● Gfarm システムの構成要素

Gfarm システムは，下記の種類のホストから構成されます．

・クライアント

  ユーザが Gfarm システムにリクエストを送るのに用いるホストです．

・ファイルシステムノード

  計算資源と，Gfarm ファイルシステムのディスクを提供するホスト群です．
  広域に存在する数千ノード，数万ノードが想定されています．それぞれのノー
  ド上では gfsd が走ります．

・メタデータサーバ

  Gfarm ファイルシステムのメタデータと，ユーザがリクエストした並列プロ
  セスを管理するホストです．並列プロセスはファイルシステムノードのホス
  ト群で実行されることになります．ホスト上では gfmd が走ります．

Gfarm ファイルシステムは，大容量ファイルを，ファイルシステムノード上の
複数のホストに分散して配置します．この分散されたファイルの個々をファイ
ル断片と呼びます．ファイルシステムノード上のホストそれぞれが，自ホスト
上に存在するファイル断片を処理するような，データ並列処理アプリケーショ
ンをグリッドサービスとして支援することが，Gfarm システムの主な目的です．

例えば，クライアントで「gfmpirun_p4 gfarm:gfwc gfarm:file」を実行すると，
引数で指定した Gfarm ファイル ``gfarm:file'' のファイル断片が存在する
ファイルシステムノード上で，MPI 並列コマンド gfwc が実行されます．

あるいは，「gfrun gfarm:gfgrep -o gfarm:output 正規表現 gfarm:input」
を実行すると，引数で指定した Gfarm ファイルのファイル断片が存在するファ
イルシステムノード上で，コマンド gfgrep が並列実行されます．

========================================================================

● ソフトウェア構成

Gfarm ソフトウェアは，大きく下記の項目に分類されます．

・libgfarm.a ライブラリ

  Gfarm のもとで走るアプリケーション・プログラムにリンクされる
  ライブラリです．Gfarm の並列ファイルシステムのライブラリ・インタフェー
  スや，ユーティリティ関数からなります．

  並列ファイルシステムは，内部的には LDAP サーバーを利用した，Gfarm メ
  タデータベース・ライブラリを用いて実装されています．

  既存アプリケーションで Gfarm ファイルシステムを利用するためのライブ
  ラリ gfs_hook.o も準備されています．この場合，プログラムリンク時に 
  gfs_hook.o と libgfarm.a をいっしょにリンクするだけで，Gfarm ファイ
  ルシステムが利用できるようになります．

・gfmd - Gfarm メタデータサーバ

  メタデータサーバ・マシン上で動作するデーモンプログラムです．
  現状の実装では，実行中のプロセス情報のみを管理しており，
  ファイルシステムメタデータサーバの機能は果たしていません．ファイルシ
  ステムメタデータサーバは LDAP サーバを直接利用しています．

・gfsd - Gfarm ファイルシステム・デーモン

  ファイルシステムノード上の全ホストで動作するデーモンプログラムです．
  Gfarm ファイルのアクセス機能を提供し，Gfarm ファイルシステムを構成し
  ます．

・Gfarm コマンドツール

  gfls, gfrm, gfwhere, gfrep などのファイルシステムコマンド，gfreg,
  gfexport などのファイル管理コマンド，gfps, gfrun などのプロセス管理，
  実行コマンド，およびファイルシステムノード管理コマンド gfhost，認証
  キー管理ツール gfkey などからなります．
  
  さらに，gfptool/ ディレクトリ以下には，gfcp, gfgrep などの並列 Gfarm
  コマンドがあります．

・Gfarm サンプル・プログラム

  Gfarm 並列ファイルシステムにファイルを取り込むコマンドのコーディング
  例として，gfimport_fixed および gfimport_text を用意しました．

========================================================================

● 構築方法

今回のシステムは，Linux 上で実行テストされています．
構築に関しては NetBSD, Solaris 上でテストされています．

システムの構築のためには，OpenLDAP と OpenSSL ライブラリが必要です．認
証方式として GSI を利用するためには，GSSAPI ライブラリが必要となります．
現在の configure では GSSAPI ライブラリとして Globus toolkit version 2
(GT2) に含まれるライブラリをサポートしています．また，既存の MPI アプ
リケーションで Gfarm ファイルシステムを利用するためのライブラリ
gfs_hook_mpi.o の構築，および MPI サンプルアプリケーションの構築，実行
するためには MPI が必要となります．

今回のシステムを構築するには，下記のようにします．

	% ./configure [オプション]
	% make
	% make install

configure コマンドには，下記のオプションがあります．
このうち，--with-openldap は必須です．

・--with-openldap=ディレクトリ

  OpenLDAP のインストールされているディレクトリを指定します．
  このオプションは必ず指定してください．

・--with-openssl=ディレクトリ

  OpenSSL のインストールされているディレクトリを指定します．
  オプション省略時は /usr が指定されます．

・--with-mpi=ディレクトリ

  MPI アプリケーションのサンプルプログラムおよび MPI プログラムのシス
  テムコールをフックするためのライブラリをコンパイルします．ディレクト
  リを指定した場合はコンパイラとして ${ディレクトリ}/bin/mpicc が利用
  され，省略時は mpicc は利用されます．このオプションは省略可能です．

・--with-globus=ディレクトリ

  認証方式として GSI を可能とします．ディレクトリは Globus toolkit
  version 2 (GT2) のインストールされているディレクトリを指定します．
  GT2 のうち GSSAPI ライブラリが必要となります．ディレクトリを指定しな
  いと，環境変数 GLOBUS_LOCATION の示すディレクトリが利用されます．
  このオプションは省略可能です．

・--prefix=ディレクトリ

  インストール先のディレクトリを指定します．このオプションを省略した場
  合は $HOME ディレクトリの下にインストールします．
  このオプションは省略可能です．

利用するコンパイラを明示したい場合には，環境変数 CC に，コンパイラのコ
マンド名を指定して configure を実行してください．以下は gcc を指定する
例です．

	% env CC=gcc ./configure [options]

========================================================================

● 設定方法

この章では，管理者が最初にどんな設定を行う必要があるかを解説します．

以下では，下記のような構成を仮定して解説します．

・Gfarm インストール・ディレクトリ

	/usr/grid

・OpenLDAP インストール・ディレクトリ

	/usr/local/openldap

・LDAP サーバーを実行するホスト

	ldap.example.com

・LDAP サーバーの利用する TCP ポート番号

	389

・LDAP サーバーの設定ファイルを置くディレクトリ

	/etc/gfarm-ldap

・LDAP データベースの初期設定内容を記述するファイル

	/etc/gfarm-ldap/initial.ldif

・LDAP のデータベース・ファイルを置くディレクトリ

	/var/gfarm-ldap

・LDAP の base distinguished name

	dc=example,dc=com

  この値は，LDAP で保持する情報の根となるノードの名称です．

  Gfarm システムを利用している組織のドメイン名が example.com であれば，
  そのドメイン名の各構成要素を dc= に指定して「dc=example,dc=com」の
  ような名前を決め，これを base distinguished name に使うと良いでしょ
  う．

・ファイルシステムノードに置く，データ・ファイル用スプール・ディレクト
  リ

	/var/spool/gfarm

------------------------------------------------------------------------

◇ LDAP サーバー

まず，Gfarm ファイルシステムのファイルシステムメタデータを保持する 
LDAP サーバーを用意する必要があります．これには下記の設定が必要です．

▽ slapd.conf

OpenLDAP 付属の LDAP サーバーの設定ファイルです．
base distinguished name を，このファイルの suffix および 
rootdn で参照しているのに注意してください．

例えばホスト ldap.example.com の
ファイル /etc/gfarm-ldap/slapd.conf に，
下記のような内容を記述します．
設定ファイル中で include している core.schema のパス名は OpenLDAP のイ
ンストレーションにより変わります．

------------------------------ ここから ------------------------------
#
# See slapd.conf(5) for details on configuration options.
# This file should NOT be world readable.
#
include         /etc/openldap/schema/core.schema
include         /etc/gfarm-ldap/gfarm.schema

pidfile         /var/run/gfarm-slapd.pid
argsfile        /var/gfarm-ldap/slapd.args

# enable global write access for now. XXX
defaultaccess write

# unlimit search result
sizelimit 2000000000

#######################################################################
# ldbm database definitions
#######################################################################

database        ldbm

suffix          "dc=example, dc=com"
rootdn          "cn=root, dc=example, dc=com"

directory       /var/gfarm-ldap
rootpw          secret-ldap-password

# Indices to maintain
index	objectClass	eq

index	pathname	pres,eq
index	section		pres,eq
index	hostname	pres,eq
#
dbnosync
------------------------------ ここまで ------------------------------

▽ gfarm.schema

slapd.conf から include されているファイルです．

ソース配布中のファイル doc/conf/gfarm.schema を，
ホスト ldap.example.com の /etc/gfarm-ldap/gfarm.schema に置いてください．

バイナリ配布の場合，gfarm-server パッケージ中の
/etc/gfarm-ldap/gfarm.schema に，このファイルが含まれています。

特にカスタマイズする項目はありません．

▽ ファイルシステムメタデータの初期情報を作る

次に，メタデータサーバに登録する情報の初期設定を，
アスキーファイルで作成します．

このファイルには，LDAP の根となるノードの情報として，
dn (distinguished name) 属性に base distinguished name を，
また objectclass 属性に top を設定します．

例えばホスト ldap.example.com の
ファイル /etc/gfarm-ldap/initial.ldif に，
下記のような内容を設定することになります．

------------------------------ ここから ------------------------------
dn: dc=example, dc=com
objectclass: top

------------------------------ ここまで ------------------------------

▽ LDAP データベースの作成

前節で作成したファイルシステムメタデータの初期情報を元に，LDAP データ
ベースを作成します．これには，ホスト ldap.example.com で，下記のコマン
ドを実行します．

	% rm -f /var/gfarm-ldap/*
	% cd /etc/gfarm-ldap
	% /usr/local/openldap/sbin/slapadd -f slapd.conf -l initial.ldif

▽ LDAP サーバーの起動

ホスト ldap.example.com で，LDAP サーバーを起動します．
下記のコマンドを実行します．

	% cd /usr/local/openldap/libexec/
	% ./slapd -f /etc/gfarm-ldap/slapd.conf -h ldap://:389/

このオプション -h で指定した 389 が，LDAP サーバーのポート番号です．
ポート番号として，この例のように1024番未満を利用する場合，slapd の
起動を root 権限で行なう必要があります．

▽ LDAP サーバーの動作試験

下記のコマンドを実行してみましょう．initial.ldif ファイルに設定したの
と同じ内容が表示されれば，正しく動作しています．

Bourne Shell の場合:
	% host=ldap.example.com
	% port=389
	% basedn='dc=example, dc=com'
	% cd /usr/local/openldap/bin
	% ./ldapsearch -x -b "$basedn" -L -h $host -p $port '(objectclass=*)'

csh の場合:
	% set host=ldap.example.com
	% set port=389
	% set basedn='dc=example, dc=com'
	% cd /usr/local/openldap/bin
	% ./ldapsearch -x -b "$basedn" -L -h $host -p $port '(objectclass=*)'

◇ ~/.gfarmrc

クライアントホストで ~/.gfarmrc を下記のように設定します．

------------------------------ ここから ------------------------------
metadb_serverhost ldap.example.com
ldap_serverhost ldap.example.com
ldap_serverport 389
ldap_base_dn "dc=example, dc=com"
auth enable sharedsecret *
------------------------------ ここまで ------------------------------

▽ ファイルシステムノードの登録

LDAP サーバーを起動したら，gfhost コマンドを利用して，
ファイルシステムノードの情報を登録します．

ファイルシステムノードを構成するホストの情報には，下記のような項目が
あります．

・hostname

    gfhost コマンドの引数として指定します．
    FQDN (fully qualified domain name) で指定してください．

・hostalias

    複数のネットワークインターフェースを持ち，それぞれのインターフェース
    に異なるホスト名が与えられている場合，gfhost コマンドの，hostname
    に続く引数で，それらのホスト名を指定することができます．
    物理的なネットワークインターフェースが１つだけしかないホストでは，
    特に指定しません．

・architecture

    計算機アーキテクチャを表す名称を sparc-sun-solaris8 のような
    形式で記述します．
    gfhost コマンドの -a オプションの引数として指定します．

・ncpu

    そのコンピュータのCPU数を記述します．
    gfhost コマンドの -n オプションの引数として指定します．
    このオプションは省略可能です．

例えば下記のようなコマンドで設定することになります．
オプション -c は，登録を指示するコマンドです．

	% gfhost -c -a i386-redhat8.0-linux linuxhost-1.example.com
	% gfhost -c -a i386-redhat8.0-linux linuxhost-2.example.com
	% gfhost -c -a i386-redhat8.0-linux linuxhost-3.example.com
	% gfhost -c -a i386-redhat8.0-linux linuxhost-4.example.com
	% gfhost -c -a i386-debian3.0-linux -n 2 linuxhost-5.example.com
	% gfhost -c -a i386-debian3.0-linux -n 2 linuxhost-6.example.com
	% gfhost -c -a sparc-sun-solaris8 solarishost-1.example.com
	% gfhost -c -a sparc-sun-solaris8 solarishost-2.example.com
	% gfhost -c -a alpha-hp-osf5.0 osfhost-1.example.com
	% gfhost -c -a mips-sgi-irix6.5 -n 16 irixhost-1.example.com

登録結果は，オプション -M を指定して gfhost を実行することで，
確認できます．

	% gfhost -M
	i386-redhat8.0-linux 1 linuxhost-1.example.com
	i386-redhat8.0-linux 1 linuxhost-2.example.com
	i386-redhat8.0-linux 1 linuxhost-3.example.com
	i386-redhat8.0-linux 1 linuxhost-4.example.com
	i386-debian3.0-linux 2 linuxhost-5.example.com
	i386-debian3.0-linux 2 linuxhost-6.example.com
	sparc-sun-solaris8 1 solarishost-1.example.com
	sparc-sun-solaris8 1 solarishost-2.example.com
	alpha-hp-osf5.0 1 osfhost-1.example.com
	mips-sgi-irix6.5 16 irixhost-1.example.com

------------------------------------------------------------------------

◇ gfsd スプール・ディレクトリの作成

ファイルシステムノード上の全ホストで，スプール・ルート・ディレクトリ
/var/spool/gfarm を作成します．また，スプール・ルート・ディレクトリの
下に，バイナリ用のディレクトリおよびユーザ別のディレクトリを作成します．
下記の例では，ユーザー morita，tatebe，soda のディレクトリを作成してい
ます．ユーザ別ディレクトリは以下で紹介する gfrun コマンドでも自動的に
作成されます．

	% su
	Password: 
	# sh
	# mkdir /var/spool/gfarm
	# chmod 1777 /var/spool/gfarm
	# mkdir /var/spool/gfarm/bin
	# chmod 1777 /var/spool/gfarm/bin
	# for u in morita tatebe soda; do
	>   mkdir /var/spool/gfarm/$u
	>   chown ${u} /var/spool/gfarm/$u
	> done
	# exit
	# exit
	% 

◇ /etc/gfarm.conf

メタデータサーバのホストと，ファイルシステムノード上の全ホストで，
/etc/gfarm.conf を下記のように設定します．

------------------------------ ここから ------------------------------
spool /var/spool/gfarm
metadb_serverhost ldap.example.com
ldap_serverhost ldap.example.com
ldap_serverport 389
ldap_base_dn "dc=example, dc=com"
auth enable sharedsecret *
------------------------------ ここまで ------------------------------

メタデータサーバのホストあるいはファイルシステムノードがクライアントと
なる場合は，クライアントプログラムはまず ~/.gfarmrc を読み込み，次に
/etc/gfarm.conf を読み込みます．

◇ gfmd

メタデータサーバ用マシン上で，root 権限で gfmd を立ち上げます．
gfmd は，前節で解説した /etc/gfarm.conf ファイルを設定ファイルとして
読み込みます．

	% su
	Password: 
	# gfmd

スタートアップスクリプトのサンプルファイルが package/<OS>/gfmd に
あります．なお，テストなどの目的で gfmd をユーザ権限で立ち上げたい
場合は -f オプションをつけて設定ファイルを指定して立ち上げます．詳細は 
man gfmd を参照してください．

gfmd が正しく起動されているかどうかは，オプションを指定せずに gfps
コマンドを実行することで確認できます．正しく起動されている場合は，
なにも表示せずに，即座に実行を完了します．

	% gfps

◇ gfsd

ファイルシステムノードを構成する全ホストにおいて，root 権限で gfsd を
立ち上げます．gfsd は，前節で解説した /etc/gfarm.conf ファイルを設定ファ
イルとして読み込みます．

	% su
	Password: 
	# gfsd

スタートアップスクリプトのサンプルファイルが package/<OS>/gfsd に
あります．なお，テストなどの目的で gfsd をユーザ権限で立ち上げたい
場合は -f オプションをつけて設定ファイルを指定して立ち上げます．詳細は 
man gfsd を参照してください．

gfsd が正しく起動されているかどうかは，オプション -l を指定して gfhost 
を実行することで確認できます．行頭に表示されている3つの数字はロード・
アベレージです．

	% gfhost -l
	0.00/0.00/0.00 i386-redhat8.0-linux 1 linuxhost-1.example.com
	0.00/0.00/0.00 i386-redhat8.0-linux 1 linuxhost-2.example.com
	-.--/-.--/-.-- i386-redhat8.0-linux 1 linuxhost-3.example.com
	0.00/0.00/0.00 i386-redhat8.0-linux 1 linuxhost-4.example.com
	0.40/0.45/0.42 i386-debian3.0-linux 2 linuxhost-5.example.com
	0.43/0.50/0.40 i386-debian3.0-linux 2 linuxhost-6.example.com
	0.10/0.00/0.00 sparc-sun-solaris8 1 solarishost-1.example.com
	x.xx/x.xx/x.xx sparc-sun-solaris8 1 solarishost-2.example.com
	0.00/0.00/0.00 alpha-hp-osf5.0 1 osfhost-1.example.com
	0.35/0.58/0.21 mips-sgi-irix6.5 16 irixhost-1.example.com

linuxhost-3.example.com の -.-- は，このノード上に（指定したポートで） 
gfsd が動いていないことを示し，solarishost-2.example.com の x.xx はこ
のノードに接続できない（ノードかネットワークが落ちている）ことを示し
ています．

◇ Gfarm 並列コマンドの登録

並列ファイルコピー，並列 grep などのコマンドを Gfarm ファイルシステム
に登録するために，それぞれのアーキテクチャのファイルシステムノードで以
下を実行します．

	% make gfregister

並列コマンドは gfarm:/bin ディレクトリに登録されます．

	% gfls -l gfarm:/bin
	-rwxr-xr-x tatebe   *            404988 Feb  7 01:30 gfcombine
	-rwxr-xr-x tatebe   *            479056 Feb  7 01:30 gfcombine_hook
	-rwxr-xr-x tatebe   *            404133 Feb  7 01:30 gfcp
	-rwxr-xr-x tatebe   *            478109 Feb  7 01:30 gfcp_hook
	-rwxr-xr-x tatebe   *            406474 Feb  7 01:30 gfgrep
	-rwxr-xr-x tatebe   *            423342 Feb  7 01:44 gfreg
	-rwxr-xr-x tatebe   *            423255 Feb  7 01:30 gfsplck

登録されているアーキテクチャは gfwhere で確認できます．

	% gfwhere gfarm:/bin/gfcp

========================================================================

● 実行方法

この章では，各ユーザーによる，サンプルの実行例を説明します．詳しくはユー
ザーガイド doc/GUIDE.ja をご覧下さい．

◇ サインオン

現在，認証方式として共通秘密鍵方式とグリッド・セキュリティ・インフラス
トラクチャ(GSI)をサポートしています．どの認証方式を利用するかは設定ファ
イルで指定します．

・共有秘密鍵方式

共有秘密鍵方式はホームディレクトリを共有している信頼された環境で用いる
ことを仮定しています．この方式では，秘密鍵がホームディレクトリ上に自動
的に作成され，すべてのノードで共有されます．この環境で利用する限り，特
別なサインオン操作は必要ありません．

ホームディレクトリを共有していない環境，あるいは広域環境で，この方式を
利用する場合は，以下の手順で秘密鍵として利用している認証用セッション・
キー・ファイルをあらかじめ安全にコピーしておく必要があります．

1. クライアント上で下記のコマンドを実行して，「~/.gfarm_shared_key」に
  認証用セッション・キー・ファイルを作成する．

	% gfkey -c

2. 「~/.gfarm_shared_key」を，メタデータサーバのホストとファイルシステ
  ムノードの全ホストのホームディレクトリに scp などでコピーする．

ここで作成されたセッション・キー・ファイルは作成されてから24時間有効で
す．

・グリッド・セキュリティ・インフラストラクチャ(GSI)

GSI を利用する場合は，ユーザ証明書と，利用するファイルシステムノードお
よびメタデータサーバのホスト証明書が必要になります．さらに，すべてのノー
ドのグリッド・マップ・ファイルに利用者のエントリが必要です．
さらに，全てのノードの /etc/grid-security/grid-mapfile に，ユーザー
証明書のサブジェクト名とUNIXユーザー名の対応を定義する必要があります．
GSI の詳細は，下記の WWW ページを参照してください．
	http://www.globus.org/security/

GSI ではユーザ代理証明書を作成することでサインオンが完了します．

	% grid-proxy-init

◇ Gfarmファイルシステムの利用例

以下に，Gfarmファイルシステムの利用例を示します．

・複数ファイルを一つの Gfarmファイルとしてインポート

  Gfarmファイルシステムでは，複数のファイルをまとめて一つのファイルと
  して扱うことができます．例えば，file01 から file10 までのファイルを，
  gfarm:file として扱うことができます．このためには，まず以下のように 
  gfreg コマンドを利用してファイルを登録します．

	% gfreg file?? gfarm:file

  このとき，file01 から file10 までのファイルはグルーピングされ，ファ
  イル gfarm:file としてアクセスできるようになります．

	% gfls -l gfarm:file

  gfls コマンドでは Gfarm URL の gfarm: は省略可能ですので，

	% gfls -l file

  でも同じ結果となります．次に，gfwhere コマンドで格納先を確認してみま
  しょう．

	% gfwhere gfarm:file
	0: gfm01.apgrid.org
	1: gfm02.apgrid.org
	2: gfm03.apgrid.org
	3: gfm04.apgrid.org
	4: gfm05.apgrid.org
	5: gfm06.apgrid.org
	6: gfm07.apgrid.org
	7: gfm08.apgrid.org
	8: gfm09.apgrid.org
	9: gfm10.apgrid.org

  gfwhere コマンドも gfls と同様に Gfarm URL の gfarm: は省略可能です．
  gfwhere コマンドの出力で : の左はファイルインデックス番号と呼ばれ，
  上記の例では 0 から 9 までが割り当てられています．: の右は，格納され
  ているファイルシステムノードが表示されます．

  格納されたファイルは，全体を一つのファイルとしてアクセスすることも，
  それぞれのファイルの集合としてアクセスすることもできます．gfexport
  を利用して，ファイルの内容を表示してみましょう．

	% gfexport gfarm:file
	% gfexport -I 0 gfarm:file

  はじめの例は，gfarm:file を file01 から file10 までが結合したファイ
  ルとして扱い，ファイルの内容を表示します．次の例は，gfarm:file のう
  ち，インデックス番号が 0 のファイルを表示します．この例では file01 
  の内容が表示されることになります．

  上記のファイル登録は，以下のようにファイルを一つづつ登録することもで
  きます．この場合，0 から 9 までのファイルのインデックス番号および，
  ファイル総数 10 を gfreg のコマンド引数で与えます．

	% gfreg -I 0 -N 10 [ -h ホスト ] file01 gfarm:file
	% gfreg -I 1 -N 10 [ -h ホスト ] file02 gfarm:file
	% ...
	% gfreg -I 9 -N 10 [ -h ホスト ] file10 gfarm:file

  このとき，それぞれのファイルはそのとき最も負荷の低いファイルシステム
  ノードに格納されますが，-h オプションでファイルシステムノードを直接
  指定することもできます．ファイルを一つづつ登録する上記コマンドをファ
  イルシステムノードで実行すると，遠隔のファイルシステムノードよりも自
  ノードが優先して選ばれてしまうため，全ファイルが自ノードに登録されて
  しまうことになります．この場合，ファイルを分散したい場合には -h オプ
  ションを指定して，ホスト名を指定する必要がありますので，注意が必要で
  す．

・テキストファイルを複数ファイルに分割してインポート

  gfimport_text は引数に指定したテキスト・ファイルを，一行を複数のフラ
  グメントに分割することのないように分割して Gfarm ファイルシステムに
  取り込むサンプルプログラムです．

	% gfimport_text -H ホスト定義ファイル -o gfarm:テスト.txt テキストファイル

  上記「-H」オプションで指定する「ホスト定義ファイル」は，import した
  ファイルのファイル断片を置くファイルシステムノードのホスト名を記述し
  たファイル名です．
  一行に一ホストの形式で指定してください．指定したホストに，入力テキス
  トファイルを等分割して import します．

  ホスト定義ファイルは「-」を指定することにより標準入力を指定すること
  ができ，この場合 gfhost コマンドと組み合わせて以下のように指定するこ
  ともできます．

	% gfhost | gfimport_text -H - -o gfarm:テスト.txt テキストファイル

  「-H ホスト定義ファイル」の代わりに「-f フラグメント定義ファイル」を
  指定することもできます．この場合，各行を下記の形式で記述します．
	そのフラグメントのバイト数  ホスト名

  結果を確認してみましょう．

	% gfexport gfarm:テスト.txt | diff -c - テキストファイル

・固定長レコードファイルを複数ファイルに分割してインポート

	% gfimport_fixed -H ホスト定義ファイル -o gfarm:テスト.bin -l 100 固定長レコードファイル

  結果を確認してみましょう．

	% gfexport gfarm:テスト.bin | cmp - 固定長レコードファイル

・gfgrep - parallel grep

  gfgrep プログラムが，gfarm:/bin/gfgrep という名称で登録されているこ
  とを確認します．

	% gfls -l gfarm:/bin/gfgrep

  もし登録されていないない場合は，ファイルシステムノードで 'make
  gfregister' を実行するか gfreg コマンドを利用して登録します．

	% gfreg /usr/grid/bin/gfgrep gfarm:/bin

  ファイルシステムノード以外で gfreg を実行する場合は -a オプションで
  プログラムのアーキテクチャ名を指定する必要があります．

  実行してみましょう．

	% gfrun gfarm:/bin/gfgrep -o gfarm:gfgrep.out 正規表現 gfarm:テスト.txt

  結果を確認してみましょう．

	% gfexport gfarm:gfgrep.out
	% grep 正規表現 テキストファイル

・gfwc - parallel word counts

  gfgrep と同様に gfwc プログラムが，gfarm:/bin/gfwc という名称で登録
  されていることを確認し，登録されていない場合は登録します．

	% gfreg /usr/grid/bin/gfwc gfarm:/bin/gfwc

  実行してみましょう．

	% gfmpirun_p4 gfarm:/bin/gfwc gfarm:テスト.txt

  結果を確認してみましょう．

	% wc テキストファイル

$Id$
